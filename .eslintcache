[{"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\index.js":"1","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\App.js":"2","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Store.js":"3","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Auth.js":"4","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Expense.js":"5","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\Header.js":"6","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseForm.js":"7","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\ContactDetails.js":"8","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\Login.js":"9","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\UserPage.js":"10","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\Logout.js":"11","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseList.js":"12","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\Context\\CreateContext.js":"13","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseItem.js":"14","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\DarkTheme\\ThemeToggle.js":"15","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\LoadingSpinner.js\\LoadingSpinner.js":"16","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\ForgetPassword\\Forgetpassword.js":"17"},{"size":484,"mtime":1681535134805,"results":"18","hashOfConfig":"19"},{"size":2367,"mtime":1681540061683,"results":"20","hashOfConfig":"19"},{"size":272,"mtime":1681536073618,"results":"21","hashOfConfig":"19"},{"size":964,"mtime":1681534956509,"results":"22","hashOfConfig":"19"},{"size":1132,"mtime":1681535004357,"results":"23","hashOfConfig":"19"},{"size":2278,"mtime":1681539870395,"results":"24","hashOfConfig":"19"},{"size":4162,"mtime":1681539298979,"results":"25","hashOfConfig":"19"},{"size":2967,"mtime":1681539915067,"results":"26","hashOfConfig":"19"},{"size":5305,"mtime":1681632601792,"results":"27","hashOfConfig":"19"},{"size":1627,"mtime":1681539332865,"results":"28","hashOfConfig":"19"},{"size":634,"mtime":1681534439714,"results":"29","hashOfConfig":"19"},{"size":1054,"mtime":1681487813169,"results":"30","hashOfConfig":"19"},{"size":261,"mtime":1681486692015,"results":"31","hashOfConfig":"19"},{"size":1776,"mtime":1681539269106,"results":"32","hashOfConfig":"19"},{"size":771,"mtime":1681539314726,"results":"33","hashOfConfig":"19"},{"size":452,"mtime":1681534499504,"results":"34","hashOfConfig":"19"},{"size":380,"mtime":1681534170316,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1kmi6ay",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\index.js",[],["76","77"],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\App.js",["78"],"import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { AuthSliceAction } from \"./store/Auth\";\nimport \"./App.css\";\n\nconst Header = React.lazy(() => import(\"./components/Header/Header\"));\nconst ExpenseForm = React.lazy(() =>\n  import(\"./components/Expense/ExpenseForm\")\n);\nconst LoadingSpinner = React.lazy(() =>\n  import(\"./components/Header/LoadingSpinner.js/LoadingSpinner\")\n);\nconst ContactDetails = React.lazy(() =>\n  import(\"./components/Login/ContactDetails\")\n);\nconst AuthForm = React.lazy(() => import(\"./components/Login/Login\"));\nconst UserPage = React.lazy(() => import(\"./components/Login/UserPage\"));\nfunction App() {\n  const Dispatch = useDispatch();\n\n  const dark = useSelector((state) => state.expense.darkmode);\n\n  const loginState = useSelector((state) => state.auth.loginState);\n  useEffect(() => {\n    if (localStorage.getItem(\"islogin\") === \"true\") {\n      console.log(\"hi\");\n      Dispatch(AuthSliceAction.setLoginsate());\n    }\n  }, []);\n  \n  console.log(dark);\n  return (\n    <>\n      {\" \"}\n      <Suspense fallback={<p className=\"\">Loading .....</p>}>\n        <div className={dark || !loginState ? \"light\" : \"dark\"}>\n          {loginState && <Header></Header>}\n          {console.log(\"app rendeing\")}\n          {!loginState ? (\n            <Route path=\"/login\">\n              <AuthForm></AuthForm>\n            </Route>\n          ) : (\n            <Switch>\n              <Route path=\"/contactdetails\">\n                <ContactDetails></ContactDetails>\n              </Route>\n\n              <Route path=\"/userpage\" exact>\n                <UserPage></UserPage>\n              </Route>\n              <Route path=\"/loading\">\n                <LoadingSpinner></LoadingSpinner>\n              </Route>\n              <Route path=\"/expenseform\" exact>\n                <ExpenseForm></ExpenseForm>\n              </Route>\n              <Route path=\"/login\" exact>\n                <AuthForm></AuthForm>\n              </Route>\n\n              <Route path=\"*\">\n                <Redirect to=\"/login\" />\n              </Route>\n            </Switch>\n          )}\n          {!loginState && <Redirect to=\"/login\" />}\n          {loginState && <Redirect to=\"/expenseform\" />}\n        </div>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Store.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Auth.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\store\\Expense.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\Header.js",["79"],"import React, { useState } from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport { NavLink} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ThemeToggle from \"../DarkTheme/ThemeToggle\";\r\nimport Logout from \"./Logout\";\r\n// import { Dropdown, ToggleButton } from \"react-bootstrap\";\r\nconst Header = () => {\r\n  const [toggle, settoggle] = useState(true);\r\n  const total = useSelector((state) => state.expense.TotalAmount);\r\n  const Items = useSelector((state) => state.expense.items);\r\n  const loginState = useSelector((state) => state.auth.loginState);\r\n  \r\n\r\n  const DownloadHandler = () => {\r\n    console.log(\"DownloadHandler\");\r\n\r\n    const blob = new Blob([JSON.stringify(Items)], {\r\n      type: \"application/json\",\r\n    });\r\n    const link = document.createElement(\"a\");\r\n    link.href = window.URL.createObjectURL(blob);\r\n    console.log(link.href);\r\n    link.download = \"expense.csv\";\r\n    link.click();\r\n    console.log(link);\r\n  };\r\n  const PremiumbuttonHandler = () => {\r\n    console.log(\"PremiumbuttonHandler\");\r\n  };\r\n  const Premium = (\r\n    <div>\r\n      <button onClick={PremiumbuttonHandler} className={classes[\"Premium\"]}>\r\n        Premium\r\n      </button>\r\n    </div>\r\n  );\r\n  let changepos = { top: \"-1000px\" };\r\n  let postion = { top: \"30px\" };\r\n  const menutoggle = () => {\r\n    settoggle(!toggle);\r\n    console.log(\"settoggle\");\r\n  };\r\n  return (\r\n    <div className={classes[\"container-header\"]}>\r\n           <header>\r\n        <h1 className={classes[\"menutoggle\"]} onClick={menutoggle}>\r\n          Menu\r\n        </h1>\r\n        <ul style={toggle ? postion : changepos} onClick={menutoggle}>\r\n          <li>\r\n            <NavLink to=\"/expenseform\">Expense</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/userpage\">User Profile</NavLink>\r\n          </li>\r\n\r\n          <li>{total >= 10000 && <ThemeToggle></ThemeToggle>}</li>\r\n\r\n          <li>{total >= 10000 && Premium}</li>\r\n          <li>\r\n            <button onClick={DownloadHandler} className={classes.logout}>\r\n              Download\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <Logout className={classes.logout}></Logout>\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseForm.js",["80","81"],"import React, { useRef, useEffect } from \"react\";\r\nimport classes from \"./ExpenseForm.module.css\";\r\nimport ExpenseList from \"./ExpenseList\";\r\n\r\nimport { ExpenseSliceAction } from \"../../store/Expense\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ExpenseForm = () => {\r\n  const Dispatch = useDispatch();\r\n  const isupdate = useSelector((state) => state.expense.isupdate);\r\n  const temp = useSelector((state) => state.expense.tempitem);\r\n\r\n  const enteredAmount = useRef();\r\n  const enteredCategorys = useRef();\r\n  const enteredDescription = useRef();\r\n  let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n  const ExpenseFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    let itemid = localStorage.getItem(\"itemid\");\r\n    const ExpenseObject = {\r\n      amount: enteredAmount.current.value,\r\n      categorys: enteredCategorys.current.value,\r\n      description: enteredDescription.current.value,\r\n    };\r\n    if (\r\n      ExpenseObject.amount === \"\" ||\r\n      ExpenseObject.categorys === \"\" ||\r\n      ExpenseObject.description === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `https://expanse-tracker-606c0-default-rtdb.firebaseio.com/tracker/${emailId}/${\r\n          isupdate ? itemid : \"\"\r\n        }.json`,\r\n        {\r\n          method: isupdate ? \"PUT\" : \"POST\",\r\n          body: JSON.stringify(ExpenseObject),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      Dispatch(ExpenseSliceAction.updateList(ExpenseObject));\r\n      Dispatch(ExpenseSliceAction.setIsupdate(false));\r\n\r\n      enteredAmount.current.value = null;\r\n      enteredCategorys.current.value = null;\r\n      enteredDescription.current.value = null;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ExpenseFormHandler = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://expanse-tracker-606c0-default-rtdb.firebaseio.com/tracker/${emailId}.json`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n\r\n        const transformeddata = [];\r\n        for (const key in data) {\r\n          const Obj = {\r\n            id: key,\r\n            ...data[key],\r\n          };\r\n          transformeddata.push(Obj);\r\n        }\r\n        Dispatch(ExpenseSliceAction.AddItem(transformeddata));\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    ExpenseFormHandler();\r\n  }, [temp]);\r\n  const onUpdateHandler = (item) => {\r\n    Dispatch(ExpenseSliceAction.setIsupdate(true));\r\n    enteredAmount.current.value = item.amount;\r\n    enteredCategorys.current.value = item.categorys;\r\n    enteredDescription.current.value = item.description;\r\n    localStorage.setItem(\"itemid\", item.id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"ExpenseForm-container\"]}>\r\n      <form className={classes[\"ExpenseForm\"]} onSubmit={ExpenseFormHandler}>\r\n        <h2>ExpenseForm</h2>\r\n        <label htmlFor=\"amount\">Amout</label>\r\n        <input type=\"text\" id=\"Amout\" ref={enteredAmount} required></input>\r\n        <label htmlFor=\"cars\"> category</label>\r\n        <select name=\"categorys\" id=\"categorys\" ref={enteredCategorys}>\r\n          <option value=\"None\">choose category</option>\r\n          <option value=\"Food\">Food</option>\r\n          <option value=\"Petrol\">Petrol</option>\r\n          <option value=\"Cloths\">Clothes</option>\r\n          <option value=\"tavel\">travel</option>\r\n          <option value=\"etc\">Basic Needs</option>\r\n        </select>\r\n        <label htmlFor=\"description\">description</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"description\"\r\n          ref={enteredDescription}\r\n          required\r\n        ></input>\r\n\r\n        <button type=\"submit\">{!isupdate ? \"submit\" : \"update\"}</button>\r\n      </form>\r\n      <ExpenseList onUpdate={onUpdateHandler}></ExpenseList>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseForm;","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\ContactDetails.js",["82"],"import React, { useRef, useContext, useEffect } from \"react\";\r\nimport AuthContex from \"../../Context/CreateContext\";\r\n\r\nimport classes from \"./ContactDetail.module.css\";\r\nconst ContactDetails = () => {\r\n  const ctx = useContext(AuthContex);\r\n  const enteredName = useRef();\r\n  const enteredUrl = useRef();\r\n  useEffect(() => {\r\n    const getuserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBTThTF2bZBEybWGDxdJF9j6pEtGVzXUrY\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              idToken: localStorage.getItem(\"id\"),\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        if (data.error) {\r\n          throw new Error(data.error.message);\r\n        } else {\r\n          enteredName.current.value = data.users[0].displayName;\r\n          enteredUrl.current.value = data.users[0].photoUrl;\r\n        }\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    };\r\n    getuserData();\r\n  }, []);\r\n  const ContactDetailsHandle = async (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      idToken: localStorage.getItem(\"id\"),\r\n      displayName: enteredName.current.value,\r\n      photoUrl: enteredUrl.current.value,\r\n      returnSecureToken: true,\r\n    };\r\n    if (obj.displayName === \"\" && obj.photoUrl === \" \") {\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBTThTF2bZBEybWGDxdJF9j6pEtGVzXUrY\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(obj),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(data.error.message);\r\n      } else {\r\n        console.log(\"User has successfullyupdated.\", data);\r\n\r\n        alert(\"User has successfully updated,\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes[\"ContactDetails\"]}>\r\n      <header className={classes[\"ContactDetails-header\"]}>\r\n        <p>some text</p>\r\n      </header>\r\n      <div className={classes[\"ContactDetails-from-container\"]}>\r\n        <form\r\n          className={classes[\"ContactDetails-form\"]}\r\n          onSubmit={ContactDetailsHandle}\r\n        >\r\n          <h3>Contact Details</h3>\r\n          <label htmlFor=\"fullname\">Full Name</label>\r\n          <input type=\"text\" id=\"fullname\" ref={enteredName}></input>\r\n          <label htmlFor=\"url\"> Enter image URL</label>\r\n          <input type=\"text\" id=\"imageURL\" ref={enteredUrl}></input>\r\n          <button type=\"submit\">update</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactDetails;","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\Login.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Login\\UserPage.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\Logout.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseList.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\Context\\CreateContext.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Expense\\ExpenseItem.js",["83","84"],"import React from \"react\";\r\nimport classes from \"./ExpenseItem.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ExpenseSliceAction } from \"../../store/Expense\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const items = useSelector((state) => state.expense.items);\r\n  const Premium = <button className={classes[\"Premium\"]}>Premium</button>;\r\n\r\n  const Dispatch = useDispatch();\r\n  const EditButtonHandler = () => {\r\n    props.onUpdate(props);\r\n  };\r\n\r\n  const filetredLits = (id, items) => {\r\n    const list = items.filter((todo) => todo.id !== id);\r\n\r\n    return list;\r\n  };\r\n  const deleteButtonHandler = async () => {\r\n    console.log(\"deleteButtonHandler\", props.id);\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://expanse-tracker-606c0-default-rtdb.firebaseio.com/tracker/${emailId}/${props.id}.json`,\r\n        {\r\n          method: \"DELETE\",\r\n\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      const list = await filetredLits(props.id, items);\r\n      Dispatch(ExpenseSliceAction.removeItem(list));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <tr key={props.id}>\r\n      <td>{props.amount}</td>\r\n      <td>{props.categorys}</td>\r\n      <td>{props.description}</td>\r\n      <td\r\n        onClick={() => EditButtonHandler(props.id)}\r\n        className={classes[\"edit-btn\"]}\r\n      >\r\n        Edit\r\n      </td>\r\n      <td\r\n        className={classes[\"delete-btn\"]}\r\n        onClick={() => deleteButtonHandler(props.id)}\r\n      >\r\n        delete\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default ExpenseItem;","C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\DarkTheme\\ThemeToggle.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\Header\\LoadingSpinner.js\\LoadingSpinner.js",[],"C:\\Users\\JUHI\\Documents\\React.js project\\expanse-tracker\\src\\components\\ForgetPassword\\Forgetpassword.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":32,"column":6,"nodeType":"91","endLine":32,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":9,"nodeType":"95","messageId":"96","endLine":12,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":45,"column":13,"nodeType":"95","messageId":"96","endLine":45,"endColumn":17},{"ruleId":"89","severity":1,"message":"98","line":86,"column":6,"nodeType":"91","endLine":86,"endColumn":12,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"100","line":6,"column":9,"nodeType":"95","messageId":"96","endLine":6,"endColumn":12},{"ruleId":"93","severity":1,"message":"101","line":9,"column":9,"nodeType":"95","messageId":"96","endLine":9,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":36,"column":13,"nodeType":"95","messageId":"96","endLine":36,"endColumn":17},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Dispatch'. Either include it or remove the dependency array.","ArrayExpression",["104"],"no-unused-vars","'loginState' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Dispatch' and 'emailId'. Either include them or remove the dependency array.",["105"],"'ctx' is assigned a value but never used.","'Premium' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [Dispatch]",{"range":"110","text":"111"},"Update the dependencies array to be: [Dispatch, emailId, temp]",{"range":"112","text":"113"},[1079,1081],"[Dispatch]",[2697,2703],"[Dispatch, emailId, temp]"]